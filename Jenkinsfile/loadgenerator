library('jenkins-shared') _

def COLOR_MAP = [
    FAILURE: 'danger',
    SUCCESS: 'good',
]

pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'namanss'
        IMAGE_NAME = 'loadgenerator'
        DOCKERFILE_PATH = 'src/loadgenerator'
    }

    tools {
        jdk 'jdk17'
    }

    stages{
        stage('Clean the workspace') {
            steps {
                script {
                    clean_ws()
                }
            }
        }
        stage('Code Clone from Github') {
            steps {
                script {
                    git_clone("https://github.com/NamanSondhiya/google-microservices-DevSecOps.git", "dev")
                }
            }
        }
        stage('SAST Scan') {
            steps {
                dir('src/loadgenerator') {
                    script {
                        sh 'bandit -r . -f json -o bandit-report.json || true'
                    }
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'src/loadgenerator/bandit-report.json', allowEmptyArchive: true
                }
            }
        }
        stage('Trivy Fs Scan') {
            steps {
                dir('src/loadgenerator') {
                    script {
                        trivy_fs_scan()
                    }
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'src/loadgenerator/trivy-fs-report.txt', allowEmptyArchive: true
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    docker_build(env.IMAGE_NAME, "${BUILD_NUMBER}", env.DOCKER_REGISTRY, env.DOCKERFILE_PATH)
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                script {
                    trivy_image_scan(env.IMAGE_NAME, "${BUILD_NUMBER}", env.DOCKER_REGISTRY)
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'loadgenerator-trivy-image-report.txt', allowEmptyArchive: true
                }
            }
        }
        stage('Docker Push') {
            steps {
                script {
                    docker_push(env.IMAGE_NAME, "${BUILD_NUMBER}", env.DOCKER_REGISTRY)
                }
            }
        }
    }
}