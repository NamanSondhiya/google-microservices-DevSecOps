library('jenkins-shared') _
pipeline {
    agent any

    tools {
        jdk 'jdk17'
    }

    environment {
        SONAR_EV = tool 'Sonar'
    }
    
    stages{
        stage('Clean the workspace') {
            steps {
                script {
                    clean_ws()
                }
            }
        }
        stage('Code Clone from Github') {
            steps {
                script {
                    git_clone("https://github.com/NamanSondhiya/google-microservices-DevSecOps.git", "devOps")
                }
            }
        }
        stage('Sonarqube Scan') {
            steps {
                dir('src/emailservice') {
                    script {
                        sonarqube_analysis("${SONAR_EV}", "emailservice", "emailservice")
                    }                 
                }
            }
        }
        stage('Sonarqube Quality gate') {
            steps {
                script {
                    sonarqube_QualityGate(5, true)
                }
            }
        }
        stage('Trivy Fs Scan') {
            steps {
                dir('src/emailservice') {
                    script {
                        trivy_fs_scan()
                    }
                }
            }
            post {
                always {
                    archiveArtifacts 'src/emailservice/trivy-fs-report.txt'
                }
            }
        }
        stage('Owasp Scan') {
            steps {
                dir('src/emailservice') {
                    script {
                        owasp_scan()
                    }
                }
            }
            post {
                always {
                    archiveArtifacts 'src/emailservice/dependency-check-report.xml'
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    docker_build("emailservice", "${BUILD_NUMBER}", "namanss", "src/emailservice")
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                script {
                    trivy_image_scan("emailservice","${BUILD_NUMBER}","namanss")
                }
            }
            post {
                always {
                    archiveArtifacts 'emailservice-trivy-image-report.txt'
                }
            }
        }
        stage('Docker Push') {
            steps {
                script {
                    docker_push("emailservice", "${BUILD_NUMBER}", "namanss")
                }
            }
        }
    }
}